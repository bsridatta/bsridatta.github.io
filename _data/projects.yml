# Project template

- name: Binarized Neural Networks
  link: github.com/bsridatta/Rethinking-Binarized-Neural-Network-Optimization/blob/master/report/reproducibility_report.pdf
  github: bsridatta/Rethinking-Binarized-Neural-Network-Optimization
  dates: Oct 2019 - Dec 2019
  quote: >
    Project for NeurIPS19 Reproducibility challenge  
  description: | # this will include new lines to allow paragraphs
    Reimplementing and reproducing the paper, Latent Weights Do Not Exist - Rethinking Binarized Neural Network Optimization from scratch. The pipeline uses PyTorch and also PyTorch Lightning to ensure reproducibility. Reimplement the binary layers and the novel binary optimizer BOP. Experiments comparing the performance of BNNs with latent weights and BNN w/o latent weights using BOP. Experiments to study the effects of the thresholding and adaptivity rate hyperparameters of BOP.  
    <mark>PyTorch</mark> <mark>PyTorch Lightning</mark>

- name: RobotFashion
  link: github.com/bsridatta/robotfashion/blob/master/RobotFashion%20Report.pdf
  github: bsridatta/robotfashion
  dates: Sep 2019 - Dec 2019
  quote: >
    Project is a part of the works at RPL lab at KTH  
  description: | # this will include new lines to allow paragraphs
    A dataset on classifying and localizing clothing in a deformed state by robotic manipulation. Novel dataset that is different from the existing fashion datasets which could be well suited for robotic applications and also has additional depth information from stereo cameras. Preparing a diverse collection of clothes across various categories. Used Baxter robot to automate the manipulation of the clothes into various states. Synchronize real sense stereo cameras - one on the body of the Baxter and one facing the robot. Manually pick frames with clothes in key states and annotate them with bounding boxes. Performed various experiments to evaluate the dataset. This includes exploring the effects of pre-trained models, incorporating DeepFashion2 and effects of complex models with FPN backbone using PyTorch
    <mark>PyTorch</mark> <mark>PyTorch Lightning</mark>

- name: YT Trends
  #link: https://github.com/bsridatta/Data-Intensive-Computing
  github: https://github.com/bsridatta/Data-Intensive-Computing
  dates: Sep 2019 - Oct 2019
  quote: >
    Scalable pipeline for live YouTube trend visualization  
  description: | # this will include new lines to allow paragraphs
    Live data using YouTube Data API. Kafka broker as a producer to streams the queries. PySpark to consume the stream topic and perform desired operations. The results of PySpark operations are stored in spark-warehouse and ready for visualization.
    <mark>PySpark</mark> <mark>Kafka</mark>

- name: Deep Image Colorization
  link: github.com/bsridatta/Deep-Image-Colorization/blob/master/Project_Report.pdf
  github: bsridatta/Deep-Image-Colorization
  dates: April 2019 - May 2019 
  quote: >
    Colorization of B&W images using Deep Learning
  description: | # this will include new lines to allow paragraphs
    Using autoencoder network to predict color given a gray scale image i.e pridicts a,b channel given l channel in 'lab' color space. Leverages the power of pre-trained networks to effectively extract important low level features from the input gray scale image. These low level features are then fused with the low level features from the encoder and provided as the input for the decoder.   
    <mark>Keras</mark> <mark>ImageNet</mark> <mark>GCP</mark>

- name: Classical Piano Composer Recognition
  link: github.com/bsridatta/pianition/blob/master/Project_report__Draft.pdf
  github: nikvaessen/pianition
  dates: March 2019 - June 2019
  quote: >
    Piano music composer recognition from audio clips 
  description: | # this will include new lines to allow paragraphs
    Exploring the relations between the composers and compositions using Mel-scaled spectrogram and leveraging the power of convolutions to learn the low-level features and the temporal information using memory units like LSTMs and GRUs. This enables our models to not only understand the notes but also to learn the melody.  
    <mark>Keras</mark> <mark>TensorFlow</mark> <mark>Magenta</mark>


- name: Swedish Traffic Sign Detection for Autonomous Drone
  link: youtu.be/VKqXa_NXNKc
  github: bsridatta/Autonomous-Drone-DD2419-KTH
  dates: February 2019 - May 2019 
  quote: >
    Swedish Traffic Sign Detection in ROS
  description: | # this will include new lines to allow paragraphs
    Collected training data of 15 Swedish traffic signs from drone footage and integrated the trained YoLo model in ROS for
    detections on drone’s live feed. Extracted edges of signs and used Perspective-n-Point to estimate their 3D position
    <mark>Darknet</mark> <mark>Python</mark> <mark>ROS</mark> <mark>Google Colabs</mark>


- name: Wav2Letter++ on Swedish Speech
  # link: 
  github: bsridatta/wav2letter-Swedish
  dates: February 2019 - March 2019
  quote: >
    Facebook Wav2Letter++ ASR on Swedish Speech
  description: | # this will include new lines to allow paragraphs
    Pre-processed NST’s Acoustic database for Swedish, to suit the Wav2Letter architecture, generating Language model
    and tokens and tuning hyper parameters to study the working of W2L on Swedish language.
    
    <mark>W2L</mark> <mark>Python</mark> <mark>NST</mark> 


- name: Accident Anticipation
  link: drive.google.com/drive/folders/1caO8ICiDvKRwiAWtTdSqVeFvlUC3Ru05?usp=sharing
  # github:
  dates: April 2018 - July 2018
  quote: >
    Real time accident detection in video feeds using Hierarchical Recurrent Neural Networks with LSTM cells. Trained on hand sampled clips from YouTube. Part of my bachelor thesis.
  description: | # this will include new lines to allow paragraphs
    Built a deep learning model to detect car accidents in video clips
    --Implemented and tweaked YOLOv2 to detect cars in highway cams
    --Wrote scripts to scrape video clips from Youtube
    --Collected a data set of 200+ accident/non-accident videos
    --Preprocessed the data-set to lessen the burden on the machine
    --Explored pre trained models on the internet with the gathered videos
    --Experimented with a few DL models for classification
    --Implemented HRNN with LSTM to classify the video clips

    <mark>Python</mark> <mark>Keras</mark> <mark>Google Colabs</mark>
    
- name: DeepLearning.ai
  link: sridatta.ml/Deep-Learning-Specialization/
  github: bsridatta/Deep-Learning-Specialization
  dates: November 2017 - March 2018
  quote: >
    Projects as a part of the Deep Learning Specialization
  description: | # this will include new lines to allow paragraphs
    Major Projects are --Logistic Regression for Image classification 
    --Deep Neural Network for Cat or Not a Cat classification
    --Convolutional Neural Network using TensorFlow for Hand Sign Recognition
    --Happy House using Keras for Facial Expression Classification
    --Residual Networks for Hand Sign Recognition
    --Autonomous Driving Application, Car detection using YOLO on Drive.ai dataset
    --Face Recognition for the Happy House using FaceNet Architecture and OpenFace Model
    --Art Generation with Neural Style Transfer using ImageNet VGG 16 Very Deep ConvNet
    --Dinosaurus Name Generation using Character level language model 
    --Shakespearian poem generator using RNN LSTM in Keras
    --Music Generation, Jazz Solo with an LSTM Network

    <mark>Python</mark> <mark>Keras</mark> <mark>TensorFlow</mark>
    


# Project template
- name: Safe Rider - Road Assistant
  github: bsridatta/SafeRider/blob/master/Safe%20Rider.pdf
  # link:
  dates: October 2017 - January 2018
  quote: >
    Road safety application which warns users of road hazards in real-time. Detects hazards using on-board IMU sensors and Crowd-Sources the data to alert other users. Built the whole working application during a 24-hour hackathon.
  description: | # this will include new lines to allow paragraphs
    Developed road safety application which warns users of road hazards in real-time
    --Implemented algorithms to detect road hazards using IMU sensors
    --Analyzed the IMU sensor trends from a bike driven on a bad road
    --Crowd-Sourced the detections to Firebase Cloud Database
    --Integrated voice assistance to warn the user if approaching the detection
    --Built the whole working app during a 24-hour hackathon conducted by
    --Internet and Mobile Association of India in which we won the 1st place 
    --Extended project doing experiments after the hackathon

    <mark>Java</mark> <mark>Android Studio</mark> <mark>Google Maps</mark> <mark>Navigations APIs</mark>  <mark>Firebase</mark>
    
    
# Project template
- name: Twitter'e'con
  github: bsridatta/twittericon
  # link:
  dates: September 2017 - October 2017
  quote: >
    Sentimental Analysis tool to analyze real-time trends of keywords in Twitter. Classified live tweets from twitter API using ensemble modelling and implemented live graphical visualizations.   
  description: | # this will include new lines to allow paragraphs
    A Sentimental Analysis tool to analyze real-time trends of keywords in Twitter
    --Fetched Positive and Negative example sentences from online tutorials
    --Used Twitter API to fetch live tweets based on the keyword passed
    --Wrote functions to pass just adjective from the tweets into the classifiers
    --Classified the tweet based on the confidence of the classifiers put together
    --Built an interface window for the tool using TKinter
    --Integrated live graphical visualizations of the sentiments of the keyword

    <mark>Python</mark> <mark>NLTK</mark> <mark>Sci-Kit</mark> <mark>Tweepy</mark> <mark>TKinter</mark>
    
    

# Project template
- name: Indoor Localization and Navigation
  link: sridatta.ml/Indoor-Localisation/
  github: bsridatta/Indoor-Localisation
  dates: March 2017 - March 2018
  quote: >
    Indoor position system that localizes users using dual band WiFi routers and Low Energy Bluetooth Beacons without any manual fingerprinting of the environment.  
  description: | # this will include new lines to allow paragraphs
    Implemented and tweaked YOLOv2 to detect cars in highway cams
    --Wrote scripts to scrape video clips from Youtube
    --Collected a data set of 200+ accident/non-accident videos
    --Preprocessed the data-set to lessen the burden on the machine
    --Explored pre trained models on the internet with the gathered videos
    --Experimented with a few DL models for classification
    --Implemented HRNN with LSTM to classify the video clips

    <mark>Python</mark> <mark>Java</mark> <mark>Android Studio</mark>


    
    

# Project template
- name: Lego-Bot
  # link:
  # github:
  dates: May 2017 - May 2017
  #link: Link to project (eg. sproogen.github.io/modern-resume-theme)(optional)
  #github: Github page for project (eg. sproogen/modern-resume-theme)(optional)
  quote: >
    One of my most simple but elegant projects that I did so far. Wish I had some demos.
  description: | # this will include new lines to allow paragraphs
    Built an object detection and avoidance robot using Lego Mindstorms
    --Integrated LEGO brick, IR, Supersonic, touch, sound sensors to achieve required functions
    --Course correction, React to and search for sound sources like claps 
    
    <mark>Lego Mindstorms</mark> <mark>Lego NXT</mark>



# Project template
- name: E-Chain
  link: doi.org/10.11591/ijeecs.v6.i3.pp688-694
  # github:
  dates: January 2017 - April 2017
  quote: >
    An emergency train stopping cum Surveillance system designed for Indian Railways. Awarded as top 30 ideas by Amrita TBI- India's best Technological Business Incubator.  
  description: | # this will include new lines to allow paragraphs
    Built an emergency train stopping cum Surveillance system
    --Devised an emergency button-Cam module using RPi
    --The RPi module alerts the onboard authority when a button is triggered
    --The data is then broadcasted to authority’s device using a local network
    --Created by hot-spot to deal with network issues in remote areas
    --This data is then uploaded from the device to the cloud for official purposes
    --The project was placed in the top 30 ideas by Amrita TBI
    -- India’s best Technological Business Incubator


    <mark>Python</mark> <mark>Java</mark> <mark>Android Studio</mark> <mark>Raspberry Pi</mark> <mark>Arduino</mark>


# Project template
- name: Timely
  github: bsridatta/Timely
  # link:
  dates: November 2017 - March 2018
  quote: >
    An andorid app that I built along with 2 of my juniors whom I trained as a part of a workshop that I conducted.   
  description: | # this will include new lines to allow paragraphs
    Full-Flegded Portal for faculty of Amrita helping them in their everyday tasks. 
    --Interactive Timetable management
    --Profile Management--Private and Group Chat
    --Completly cloud based--Zero need for on device storage
    --Multiple Authentication option
    --Networking for task management between users and many more interesting features
    --Material design UI
    

    <mark>Google Cloud</mark> <mark>Firebase</mark> <mark>Firestore Database</mark> <mark>Material Design</mark> <mark>Java</mark> <mark>Android Studio</mark> <mark>SQL</mark>

# Project template
- name: Book Crawler
  github: bsridatta/BookCrawler
  # link:
  dates: November 2016 - January 2017
  quote: >
    My very first project that I was so passionate about. This is one of the reasons I had got into indoor localisation and worked in AMUDA labs. 
  description: | # this will include new lines to allow paragraphs
    An android application for visualizing the location of a book in the library
    --Uses the information in the university database and maps the location

    <mark>Java</mark> <mark>Android Studio</mark> <mark>SQL</mark>

 
